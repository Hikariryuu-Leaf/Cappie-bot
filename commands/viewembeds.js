const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');
const embedConfig = require('../config/embeds');

module.exports = {
  data: new SlashCommandBuilder()
    .setName('viewembeds')
    .setDescription('üîß Ch·ªâ Owner d√πng ƒë·ªÉ xem c·∫•u h√¨nh embed hi·ªán t·∫°i'),

  async execute(interaction) {
    try {
      // Defer the interaction immediately to prevent timeout
      if (!interaction.deferred && !interaction.replied) {
        await interaction.deferReply({ ephemeral: false });
      }
      
      const ownerId = process.env.OWNER_ID;
      if (interaction.user.id !== ownerId) {
        return interaction.editReply({
          content: '‚ùå B·∫°n kh√¥ng c√≥ quy·ªÅn s·ª≠ d·ª•ng l·ªánh n√†y.'
        });
      }

      const embed = new EmbedBuilder()
        .setTitle('üîß C·∫•u H√¨nh Embed Hi·ªán T·∫°i')
        .setColor('#0099ff')
        .addFields(
          { name: 'üé® Colors', value: `**Success:** ${embedConfig.colors.success}\n**Error:** ${embedConfig.colors.error}\n**Info:** ${embedConfig.colors.info}\n**Warning:** ${embedConfig.colors.warning}`, inline: false },
          { name: 'üìä Emojis', value: `**Diemdanh Success:** ${embedConfig.emojis.diemdanh.success}\n**Diemdanh Reward:** ${embedConfig.emojis.diemdanh.reward}\n**Profile Cartridge:** ${embedConfig.emojis.profile.cartridge}\n**Top Rank:** ${embedConfig.emojis.top.rank}`, inline: false }
        )
        .setTimestamp();

      await interaction.editReply({ embeds: [embed] });
    } catch (error) {
      console.error('L·ªói trong viewembeds:', error);
      try {
        await interaction.editReply({
          content: '‚ùå C√≥ l·ªói x·∫£y ra khi th·ª±c hi·ªán l·ªánh.'
        });
      } catch (replyError) {
        console.error('Kh√¥ng th·ªÉ g·ª≠i th√¥ng b√°o l·ªói:', replyError);
      }
    }
  }
}; 